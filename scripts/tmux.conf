set -g mouse on
# set -g default-terminal "screen-256color"
set -g default-terminal "tmux-256color"
set-option -gq allow-passthrough on

# set-hook -g window-layout-changed 'set-window -F pane-border-status "#{?#{==:#{window_panes},1},off,top}"'
# set-hook -g window-layout-changed 'set-window -F pane-border-status "#{?#{==:#{window_panes},1},off,top}"'
# set-hook -g window-layout-changed 'set-window -F pane-border-status "#{?#{==:#{window_index},1},off,top}"'
# set -g pane-border-format "#{pane_index} #{?#{!=:#{pane_title},$(hostname)},#{pane_title},#{pane_current_path}}"

# allow-passthrough

# shortcut to reload tmux config 
#  bind r source-file ~/.config/nvim/scripts/tmux.conf
bind r source-file ${HOME}/.tmux.conf \; display-message -p " ~/.tmux.conf reloaded"

bind w  choose-tree -Zs


set -g pane-border-status "off"
# set -g pane-border-format "[#[fg=white]#{?pane_active,#[bold],} :#P: #T #[fg=default,nobold]]"
set -g pane-border-format "[#[fg=white]#{?pane_active,#[bold],} #P: #{pane_current_command} #[fg=default,nobold]]"

# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
set-hook -g 'after-new-session'  'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'

